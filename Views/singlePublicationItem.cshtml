@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.SinglePublicationItem>
@using ContentModels = Umbraco.Web.PublishedContentModels;

@{
    Layout = "_Master.cshtml";
}



<section class="single_news">
    <div class="container ">
        <div class="row breadcrumbs">
            <div class="col-12 bc">
                <a href="@Model.Content.Parent.Url">
                    <i data-feather="arrow-left-circle"></i>
                    <span class="backtextlink">Tilbage til oversigt</span>
                </a>
            </div>
            <div class="col-12" style="display:block;">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        @{ var selection = Model.Content.Ancestors().ToArray(); }

                        @if (selection.Length > 0)
    {
                    <ul class="breadcrumb">
                        @* For each page in the ancestors collection which have been ordered by Level (so we start with the highest top node first) *@
                        @foreach (var item in selection.OrderBy(x => x.Level))
    {
                    <li><a href="@item.Url">@item.Name</a><span class="divider">&nbsp;/&nbsp;</span></li>
}

                        @* Display the current page as the last item in the list *@
                        <li class="active">@Model.Content.Name</li>
                    </ul>
}
                        </ul>
                    </ol>
                </nav>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-10 offset-lg-1 single_news_heading_bg">
                <div class="single_news_title">
                    <h1>@Model.Content.Headline</h1>
                </div>
                <div class="single_news_thumbnail">
                    <div class=" d-flex justify-content-center" style="background-image: url(@Model.Content.Picture.Url);"></div>
                </div>


            </div>
            <div class=" col-lg-8 offset-lg-2 ">
                <div class="single_news_content">
                    @Model.Content.BodyText
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row news_content">
            <div class="single_news_cta col-lg-8 offset-lg-2">
                <div class="single_news_cta_info  d-flex">
                    <div class="authorbox">
                        <img src="@Model.Content.AuthorPicture.Url" alt="" class="author">
                        <p>@Model.Content.AuthorName</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row news_content">
            <div class="single_news_cta col-lg-8 offset-lg-2">
                <div class="single_news_cta_info d-flex">
                    Tags
                    <br>
                    <br>
                </div>
                <div class="single_news_cta_info d-flex">
                    @foreach (var tag in Model.Content.Tags)
                {

                    <div class="badge badge-secondary">@tag</div>
            }
                </div>
                <br>
                <br>
            </div>

        </div>


        <div class="row news_content">
            <div class="single_news_cta col-lg-8 offset-lg-2">
                <div class="single_news_wrapper d-flex align-items-center justify-content-between">

                    <div class="single_news_cta_info d-flex">
                        <i data-feather="heart"></i>
                        <p>56</p>
                    </div>
                    <div class="single_news_cta_info d-flex">
                        <i data-feather="eye"></i>
                        <p>67367</p>
                    </div>
                    <div class="single_news_sharing d-flex ">
                        @{
        var twitterUrl = string.Format("https://twitter.com/share?url={0}", HttpUtility.UrlEncode(CurrentPage.UrlWithDomain()));
        var fbUrl = string.Format("https://www.facebook.com/sharer/sharer.php?u={0}", HttpUtility.UrlEncode(CurrentPage.UrlWithDomain()));

        var linkedinUrl = string.Format("https://www.linkedin.com/shareArticle?mini=true&url={0}", HttpUtility.UrlEncode(CurrentPage.UrlWithDomain()));

                        }
                        <p>Del</p>


                        <a class="btn-linkedin" rel="nofollow" target="_blank" href="@linkedinUrl"><i class="fab fa-linkedin"></i></a>
                        <a class="btn-twitter" rel="nofollow" target="_blank" href="@twitterUrl"><i class="fab fa-twitter"></i></a>
                        <a class="btn-facebook" rel="nofollow" target="_blank" href="@fbUrl" )"><i class="fab fa-facebook"></i></a>
                    </div>
                </div>
            </div>
        </div>

        @Html.Partial("Global/PublicationSignUp")
    </div>
</section>